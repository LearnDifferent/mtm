<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.learndifferent.mtm.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.github.learndifferent.mtm.entity.CommentDO">
        <id column="comment_id" jdbcType="INTEGER" property="commentId"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="web_id" jdbcType="INTEGER" property="webId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime"/>
        <result column="reply_to_comment_id" jdbcType="INTEGER" property="replyToCommentId"/>
    </resultMap>

    <select id="getCommentById" resultMap="BaseResultMap">
        select *
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER};
    </select>

    <select id="getUsernameByCommentId" resultType="java.lang.String">
        select username
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER};
    </select>

    <select id="getCommentTextById" resultType="java.lang.String">
        select `comment`
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER};
    </select>

    <select id="getCommentsByWebAndReplyCommentId" resultMap="BaseResultMap">
        select *
        from comment
        <where>
            <if test="webId != null">
                web_id = #{webId,jdbcType=INTEGER}
            </if>
            <if test="replyToCommentId == null">
                and reply_to_comment_id is null
            </if>
            <if test="replyToCommentId != null">
                and reply_to_comment_id = #{replyToCommentId}
            </if>
        </where>
        order by `creation_time`
        <if test="isDesc != null and isDesc != false">
            desc
        </if>
        <if test="load != null and load > 0">
            limit 0, #{load}
        </if>;
    </select>

    <select id="getCommentsByUsername" resultMap="BaseResultMap">
        select *
        from comment
        where username = #{username,jdbcType=VARCHAR};
    </select>

    <select id="getCommentByWebIdAndUsernameAndComment" resultMap="BaseResultMap">
        select *
        from comment
        where comment = #{comment}
          and username = #{username}
          and web_id = #{webId};
    </select>

    <select id="countRepliesFromComment" resultType="java.lang.Integer">
        select count(*)
        from comment
        where reply_to_comment_id = #{countRepliesFromCommentId};
    </select>

    <delete id="deleteCommentById" parameterType="java.lang.Integer">
        delete
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </delete>

    <delete id="deleteCommentsByUsername">
        delete
        from comment
        where username = #{username};
    </delete>

    <insert id="addCommentAndGetId" keyColumn="comment_id" keyProperty="commentId" useGeneratedKeys="true"
            parameterType="com.github.learndifferent.mtm.entity.CommentDO">
        insert into comment (`comment`, web_id, `username`, creation_time, `reply_to_comment_id`)
        values (#{comment,jdbcType=VARCHAR}, #{webId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
                #{creationTime,jdbcType=TIMESTAMP}, #{replyToCommentId,jdbcType=INTEGER})
    </insert>

    <update id="updateComment">
        update comment
        set comment = #{comment,jdbcType=VARCHAR}
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>

    <select id="countCommentByWebId" resultType="java.lang.Integer">
        select count(web_id)
        from comment
        where reply_to_comment_id is null
          and web_id = #{webId};
    </select>
</mapper>