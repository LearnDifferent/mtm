<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.learndifferent.mtm.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.github.learndifferent.mtm.entity.CommentDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="comment" jdbcType="VARCHAR" property="comment"/>
        <result column="bookmark_id" jdbcType="INTEGER" property="bookmarkId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime"/>
        <result column="reply_to_comment_id" jdbcType="INTEGER" property="replyToCommentId"/>
    </resultMap>

    <select id="getCommentById" resultMap="BaseResultMap">
        select id,
               comment,
               bookmark_id,
               username,
               creation_time,
               if(reply_to_comment_id = -1, null, reply_to_comment_id) as reply_to_comment_id
        from comment
        where id = #{id,jdbcType=INTEGER}
          and is_deleted = 0 limit 1;
    </select>

    <select id="getCommentSenderName" resultType="java.lang.String">
        select username
        from comment
        where id = #{id,jdbcType=INTEGER}
          and is_deleted = 0 limit 1;
    </select>

    <select id="getCommentSenderUserId" resultType="java.lang.Long">
        select u.id
        from comment c
                 left join user u on c.username = u.user_name
        where c.id = #{commentId,jdbcType=INTEGER}
          and c.is_deleted = 0
        limit 1;
    </select>

    <select id="getCommentTextById" resultType="java.lang.String">
        select `comment`
        from comment
        where id = #{id,jdbcType=INTEGER}
          and is_deleted = 0 limit 1;
    </select>

    <select id="getBookmarkComments" resultMap="BaseResultMap">
        select id, comment, bookmark_id, username, creation_time, if(reply_to_comment_id = -1, null,
        reply_to_comment_id) as reply_to_comment_id
        from comment
        <where>
            <if test="bookmarkId != null">
                bookmark_id = #{bookmarkId,jdbcType=INTEGER} and
            </if>
            reply_to_comment_id = ifnull(#{replyToCommentId}, -1)
            and is_deleted = 0
        </where>
        order by `creation_time`
        <if test="isDesc != null and isDesc != false">
            desc
        </if>
        <if test="load != null and load > 0">
            limit 0, #{load}
        </if>;
    </select>

    <select id="checkIfCommentExists" resultType="java.lang.Boolean">
        select exists(select null
                      from comment
                      where comment = #{comment}
                        and username = #{username}
                        and bookmark_id = #{bookmarkId}
                        and is_deleted = 0)
    </select>

    <select id="countRepliesFromComment" resultType="java.lang.Integer">
        select count(*)
        from comment
        where reply_to_comment_id = ifnull(#{countRepliesFromCommentId}, -1)
          and is_deleted = 0;
    </select>

    <update id="deleteCommentById" parameterType="java.lang.Integer">
        update comment
        set is_deleted = 1
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="deleteCommentsByUsername">
        update comment
        set is_deleted = 1
        where username = #{username};
    </update>

    <insert id="addComment" keyColumn="id" keyProperty="id" useGeneratedKeys="true"
            parameterType="com.github.learndifferent.mtm.entity.CommentDO">
        insert into comment (`comment`, bookmark_id, `username`, creation_time, `reply_to_comment_id`)
        values (#{comment,jdbcType=VARCHAR}, #{bookmarkId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
                #{creationTime,jdbcType=TIMESTAMP}, ifnull(#{replyToCommentId}, -1))
    </insert>

    <update id="updateComment">
        update comment
        set comment = #{comment,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="countCommentByBookmarkId" resultType="java.lang.Integer">
        select count(bookmark_id)
        from comment
        where reply_to_comment_id = -1
          and bookmark_id = #{bookmarkId}
          and is_deleted = 0;
    </select>
</mapper>