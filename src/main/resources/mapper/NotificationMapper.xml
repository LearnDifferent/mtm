<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.learndifferent.mtm.mapper.NotificationMapper">

    <insert id="upsertUserSystemNotification" parameterType="com.github.learndifferent.mtm.vo.NotificationVO">
        replace into user_system_notification(notification_id,
                                              recipient_user_id,
                                              message,
                                              creation_time,
                                              sender,
                                              is_read)
        values (#{id}, #{recipientUserId}, #{message}, #{creationTime}, #{sender}, #{isRead})
    </insert>

    <insert id="saveReplyNotification" parameterType="com.github.learndifferent.mtm.vo.NotificationVO">
        insert into reply_notification(id,
                                       message,
                                       creation_time,
                                       sender,
                                       recipient_user_id,
                                       comment_id,
                                       bookmark_id,
                                       reply_to_comment_id,
                                       is_read)
        values (#{id},
                #{message},
                #{creationTime},
                #{sender},
                #{recipientUserId},
                #{commentId},
                #{bookmarkId},
                #{replyToCommentId},
                #{isRead})
    </insert>

    <insert id="saveSystemNotification" parameterType="com.github.learndifferent.mtm.dto.NotificationDTO">
        insert into system_notification(id, message, creation_time, sender)
        values (#{id}, #{message}, #{creationTime}, #{sender})
    </insert>

    <update id="updateReplyNotificationReadStatus">
        update reply_notification
        set is_read = #{isRead}
        where id = #{id}
    </update>

    <select id="getUnreadReplyNotifications" resultType="com.github.learndifferent.mtm.vo.NotificationVO">
        select
        'REPLY_NOTIFICATION' as notificationType,
        rn.id,
        <!-- the reply notification message is the newest comment content -->
        c.comment as message,
        rn.creation_time,
        <!-- the sender is the user who sent the comment -->
        c.username as sender,
        rn.recipient_user_id,
        rn.comment_id,
        rn.bookmark_id,
        rn.reply_to_comment_id,
        false as isRead,
        <!-- if bookmark is private and the recipient user is not the bookmark owner,
        then the access status is 'UNAUTHORIZED'-->
        if(b.is_public = 0 and lower(b.user_name) != lower(b.user_name),
        'UNAUTHORIZED',
        'ACCESSIBLE')
        as accessStatus
        from reply_notification rn
        inner join user u
        <!-- Filter the recipient user by using an 'inner join'.
        This ensures the recipient user is present and targeted -->
        on rn.recipient_user_id = #{recipientUserId}
        and u.id = rn.recipient_user_id
        left join bookmark b
        on rn.is_read = 0
        and rn.bookmark_id = b.id
        <!-- consider as 'read' if bookmark is deleted -->
        and b.is_deleted = 0
        left join comment c
        on rn.comment_id = c.id
        <!-- consider as 'read' if comment is deleted -->
        and c.is_deleted = 0
        <!-- consider as 'read' if comment is blank -->
        and c.comment is not null
        and c.comment != ''
        where
        <!-- is_read is false -->
        rn.is_read = 0
        <!-- consider as 'read' if bookmark is not present -->
        and b.id is not null
        <!-- consider as 'read' if comment is not present -->
        and c.id is not null
        limit #{loadCount}
    </select>
</mapper>
