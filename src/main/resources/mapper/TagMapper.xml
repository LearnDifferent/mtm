<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.learndifferent.mtm.mapper.TagMapper">
    <resultMap id="BaseResultMap" type="com.github.learndifferent.mtm.entity.TagDO">
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="bookmark_id" jdbcType="INTEGER" property="bookmarkId"/>
    </resultMap>
    <insert id="addTag" parameterType="com.github.learndifferent.mtm.entity.TagDO">
        insert into tag (tag, bookmark_id)
        values (#{tag,jdbcType=VARCHAR}, #{bookmarkId,jdbcType=INTEGER})
    </insert>
    <select id="getSpecificTagByTagTextAndBookmarkId" resultType="com.github.learndifferent.mtm.entity.TagDO">
        select tag, bookmark_id
        from tag
        where tag = #{tagName,jdbcType=VARCHAR}
          and bookmark_id = #{bookmarkId,jdbcType=INTEGER}
        limit 1;
    </select>
    <select id="getAllTags" resultType="java.lang.String">
        select distinct tag
        from tag
        limit #{from}, #{size};
    </select>
    <select id="getTagsByBookmarkId" resultType="java.lang.String">
        select tag
        from tag
        where bookmark_id = #{bookmarkId,jdbcType=INTEGER}
        limit #{from}, #{size};
    </select>
    <select id="getBookmarkIdsByTagName" resultType="java.lang.Integer">
        select bookmark_id
        from tag
        where tag = #{tagName,jdbcType=VARCHAR}
        limit #{from}, #{size};
    </select>
    <update id="deleteTag">
        delete
        from tag
        where tag = #{tagName,jdbcType=VARCHAR}
          and bookmark_id = #{bookmarkId,jdbcType=INTEGER};
    </update>
    <update id="deleteAllTagsByBookmarkId">
        delete
        from tag
        where bookmark_id = #{bookmarkId,jdbcType=INTEGER};
    </update>
    <select id="getAllTagsAndCountOfPublicBookmarks" resultType="com.github.learndifferent.mtm.entity.TagAndCountDO">
        select tag, count(bookmark_id) number
        from tag t
        inner join bookmark b
        on b.id = t.bookmark_id and b.is_public = 1 and b.is_deleted = 0
        group by tag
        order by number desc
    </select>
    <select id="getPopularTags" resultType="com.github.learndifferent.mtm.entity.TagAndCountDO">
        select tag, count(bookmark_id) number
        from tag t
                 inner join bookmark b on b.id = t.bookmark_id and b.is_deleted = 0
        where b.is_public = 1
           or b.user_name = #{username}
        group by tag
        having number > 1
        order by number desc
        limit #{from}, #{size};
    </select>
    <select id="countDistinctTags" resultType="java.lang.Integer">
        select count(distinct tag)
        from tag;
    </select>
    <select id="countTags" resultType="java.lang.Integer">
        select count(tag)
        from tag
        where tag = #{tagName};
    </select>
</mapper>