<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.learndifferent.mtm.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.github.learndifferent.mtm.entity.UserDO">
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="creation_time" jdbcType="DATE" property="createTime"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
    </resultMap>

    <select id="getNamesAndCountTheirPublicWebs" resultType="com.github.learndifferent.mtm.dto.UserWithWebCountDTO">
        select count(web_id) webCount, u.user_name
        from website w
        left join user u on w.user_name = u.user_name
        where w.public is true
        <where>
            <if test="list != null and list.size() != 0">
                <foreach collection="list" separator="or" open="(" close=")" item="userName">
                    u.user_name = #{userName}
                </foreach>
            </if>
        </where>
        group by u.user_name
        order by webCount desc;
    </select>

    <insert id="addUser" parameterType="com.github.learndifferent.mtm.entity.UserDO">
        insert into user (user_id, user_name, `password`,
                          creation_time, `role`)
        values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{createTime,jdbcType=DATE}, #{role,jdbcType=VARCHAR})
    </insert>

    <delete id="deleteUserByName">
        delete
        from user
        where user_name = #{userName};
    </delete>

    <select id="getUserByNameAndPwd" resultMap="BaseResultMap">
        select *
        from user
        where user_name = #{param1}
          and password = #{param2};
    </select>
    <select id="getUserRoleById" resultType="java.lang.String">
        select role
        from user
        where user_id = #{userId};
    </select>
    <select id="getUserById" resultMap="BaseResultMap">
        select *
        from user
        where user_id = #{userId};
    </select>
    <select id="getRoleByName" resultType="java.lang.String">
        select role
        from user
        where user_name = #{userName};
    </select>
    <select id="getUserByName" resultMap="BaseResultMap">
        select *
        from user
        where user_name = #{userName};
    </select>
    <select id="getUsers" resultMap="BaseResultMap">
        select *
        from user;
    </select>

    <update id="updateUser" parameterType="com.github.learndifferent.mtm.entity.UserDO">
        update user
        <set>
            <if test="userName != null and userName !=''">
                user_name = #{userName},
            </if>
            <if test="password != null and password !=''">
                `password` = #{password},
            </if>
            <if test="role != null and role !=''">
                `role` = #{role},
            </if>
        </set>
        where user_id = #{userId};
    </update>
</mapper>